# docker-compose up -d
# docker-compose down -v
version: "3.8"
services:
  b-shop-nginx:
    container_name: b-shop-nginx
    image: nginx:latest
    ports:
      - "8080:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/backend/logs:/etc/nginx/logs
    networks:
      - b-shop-network
    logging: &json-file
      driver: json-file
      options:
        tag: "{{.ImageName}}|{{.Name}}|{{.ImageFullID}}|{{.FullID}}"        
        max-size: "10m"  
        max-file: "10"

  # b-shop-front:
  #   container_name: b-shop-front
  #   image: mentoring-gitlab.gabia.com:5050/mentee/mentee_2023.01/team/g-market/gabia-b-shop-frontend:latest
  #   volumes:
  #     - ./front/nginx/nginx.conf:/etc/nginx/nginx.conf
  #   ports:
  #     - "80:80"
  #   networks:
  #     - b-shop-network
  #   logging: *json-file

  b-shop-redis:
    container_name: b-shop-redis
    image: redis:6.2.7
    environment:
      - TZ=Asia/Seoul
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    ports:
      - ${REDIS_PORT}:6379
    networks:
      - b-shop-network
    volumes:
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf
      - ./redis/data/:/data/
    command: redis-server /usr/local/etc/redis/redis.conf --requirepass ${REDIS_PASSWORD}
    logging: *json-file

  b-shop-database:
    container_name: b-shop-database
    image: mysql:8.0.31
    environment:
      - MYSQL_DATABASE=${DB_NAME}
      - MYSQL_ROOT_PASSWORD=${DB_PASSWORD}
      - TZ=Asia/Seoul
    volumes:
      - ./database/config:/etc/mysql/conf.d
      - ./database/init:/docker-entrypoint-initdb.d
      - database_storage:/var/lib/mysql
    ports:
      - ${DB_PORT}:3306
    networks:
      - b-shop-network
    logging: *json-file

  b-shop-minio:
    container_name: b-shop-minio
    image: quay.io/minio/minio
    volumes:
      - minio_storage:/data
    ports:
     - ${MINIO_PORT}:9000
     - ${MINIO_WEB_PORT}:9001
    environment:
      - MINIO_ROOT_USER=${MINIO_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_PASSWORD}
    command: server --console-address ":9001" /data
    networks:
      - b-shop-network
    logging: *json-file

  create_bucket:
    container_name: create-bucket
    image: minio/mc
    depends_on:
      - b-shop-minio
    entrypoint: >
      /bin/sh -c "
      mc config host add minio http://b-shop-minio:${MINIO_PORT} ${MINIO_USER} ${MINIO_PASSWORD};
      if ! mc ls minio/${MINIO_BUCKET} >/dev/null 2>&1; then
        echo 'Bucket ${MINIO_BUCKET} does not exist. Creating...';
        mc mb minio/${MINIO_BUCKET};
        mc anonymous set public minio/${MINIO_BUCKET};
      else
        echo 'Bucket ${MINIO_BUCKET} already exists.';
      fi
      "
    networks:
      - b-shop-network
volumes:
  minio_storage: {}
  database_storage: {}

networks:
  b-shop-network:
    external: true
