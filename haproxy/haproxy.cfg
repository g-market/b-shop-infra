#---------------------------------------------------------------------
# Global settings
#---------------------------------------------------------------------
global
	log	127.0.0.1 local1
	maxconn	8000 # 프로세스 당 최대 연결 수치
    daemon       # Background 실행
	nbthread 8 # 
    
    stats socket /var/lib/haproxy/stats mode 660 level admin expose-fd listeners # 통계 관련 정보에 대한 위치를 지정
#---------------------------------------------------------------------
# common defaults that all the 'listen' and 'backend' sections will
# use if not designated in their block
#---------------------------------------------------------------------	
defaults # front, back, listen에 관한 전역 섹션
	mode	http # http 프로토콜 사용하는 로드밸런싱 모드
	log	global   # 로그는 global 설정을 따름
	option httplog # 로그 디테일을 높임
	option	dontlognull # 로그 비대화 방지를 위해 probe(정찰, 스캔) 잡다한 기록은 남기지 않음
	retries	3 # 백엔드 서버가 다운되었다고 판단하는 요청 횟수
 	option forwardfor # X-Forwarded-For를 헤더에 추가
	option	http-server-close # 실제 서버와 클라이언트 간 연결이 종료 될 시 유휴상태로 대기하지 않고 서버에서 Handshake를 종료하여 더 빠르게 새로운 세션을 준비할 수 있도록 하는 옵션
	timeout http-request	2m # 요청타임아웃 시간 설정
	timeout	queue	2m 
	timeout connect	2m
	timeout client	2m
	timeout server	2m
	timeout http-keep-alive	2m
	timeout check	2m
#---------------------------------------------------------------------
# FrontEnd Configuration
#---------------------------------------------------------------------
frontend http # 들어오는 요청에 대한 설정
	bind *:8080 # 8080 번으로 들어오는 요청을 처리
	http-request set-header X-Forwarded-Proto http 
    use_backend backend-application if { path_beg /api/ }
	default_backend front-nginx

# front nginx
backend front-nginx
    server s1 b-shop-front:8080 check

#---------------------------------------------------------------------
# BackEnd Platform Configuration
#---------------------------------------------------------------------
backend backend-application
    http-request replace-path /api(/)?(.*) /\2
	balance roundrobin # 부하분산 알고리즘

 	# health check
    option httpchk
    http-check send meth GET uri /application/health

     # configure platform instances
    http-check expect status 200
	server s2 b-shop-server-1:8080 check inter 1s fastinter 500ms
	server s3 b-shop-server-2:8080 check inter 1s fastinter 500ms
#---------------------------------------------------------------------
# HAProxy Monitoring Config
#---------------------------------------------------------------------
listen stats
    bind *:9000
    mode  http
    option dontlog-normal
    stats enable
    stats uri /haproxy
    http-request use-service prometheus-exporter if { path /metrics }
